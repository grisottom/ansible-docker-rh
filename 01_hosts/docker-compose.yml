version: "3"
name: base
services:

  #key pair generation for ssh access
  keypair: 
    build: ./base_keypair
    image: shared_key_pair
    volumes:
      - /tmp/.ansible-tmp/master_ssh_key_pair/:/work_dir/shared_key_pair/
    networks: 
      - ansible-net

  #vault for protected key/values
  hashi_vault.local:
    build: ./vault
    image: hashi_vault
    container_name: vault.local
    ports:
      - 8200:8200
    cap_add:
      - IPC_LOCK
    volumes:
      - ./vault/config/:/work_dir/
    networks: 
      - ansible-net
    command: ./run.sh

  #postgres single instance machine
  pg-host: 
    build: ./base_host
    image: target_host
    container_name: pg_host.local
    depends_on: 
      keypair:
        condition: service_completed_successfully    
    privileged: true
    volumes:
      - /tmp/.ansible-tmp/master_ssh_key_pair/id_ed25519.pub:/root/.ssh/authorized_keys/
    ports: 
      - 5433:5432
    networks: 
      - ansible-net

  # get files needed by ansible tasks
  get-files:
    build: ./get_files
    image: base_get
    volumes:
      - /tmp/ansible-tmp:/tmp/ansible-tmp
      - ./get_files/scripts/:/scripts/
    command: bash get-all-files.sh      
    networks: 
      - ansible-net

  # serve files needed by ansible tasks
  http-serve-files:
    build: ./base_http_serve
    image: http_serve
    container_name: serve.local
    depends_on: 
      get-files:
        condition: service_completed_successfully
    volumes:
      - /tmp/ansible-tmp:/serve/
    ports:
      - 8088:8000
    networks: 
      - ansible-net

  #make postgres driver available as jboss module, compressed tar.gz
  postgres-module:
    build: ./get_postgres_module
    image: get_postgres_module
    depends_on: 
      http-serve-files:
        condition: service_started
    volumes: 
      - /tmp/ansible-tmp/:/tmp/ansible-tmp/
      - ./get_postgres_module/scripts/:/scripts/
    command: sh module-pg.sh
    networks: 
      - ansible-net 
    extra_hosts:
      - "host.docker.internal:host-gateway"
      
  jboss-host:
    # build: ./base_host
    image: target_host
    depends_on: 
      # http-serve:
      #   condition: service_started    
      keypair:
        condition: service_completed_successfully
      postgres-module:
        condition: service_completed_successfully        
    privileged: true
    deploy:
      replicas: 3
    volumes:
      - /tmp/.ansible-tmp/master_ssh_key_pair/id_ed25519.pub:/root/.ssh/authorized_keys
    networks: 
      - ansible-net

#ipam - IP Address Management Driver
#configuration to avoid conflict with VPN, when it is on
#to avoid error: "could not find an available, non-overlapping IPv4 address pool among the defaults to assign to the network"
networks:
  ansible-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.25.0/24
    name: ansible-net