version: "1"
name: base
services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.10
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    networks: 
      - ansible-net

  # whoami:
  #   # A container that exposes an API to show its IP address
  #   image: traefik/whoami
  #   networks: 
  #     - ansible-net    
  #   labels:
  #     - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"
  #     - "traefik.docker.network=ansible-net"
  #     - "traefik.http.services.whatservice.loadbalancer.server.port=80"            

  # apache: 
  #   image: httpd:latest
  #   depends_on: 
  #     - reverse-proxy      
  #   deploy:
  #     replicas: 2
  #   networks: 
  #     - ansible-net
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.apache.rule=Host(`webserver.localhost`)"
  #     - "traefik.docker.network=ansible-net"
  #     - "traefik.http.services.apache.loadbalancer.server.port=80"

  web-host: 
    build: ./base_host
    image: ansible_base_host
    depends_on: 
      - reverse-proxy
    privileged: true
    deploy:
      replicas: 2
    volumes:
      - ~/.ssh/id_ed25519.pub:/root/.ssh/authorized_keys
    command: chown root:root /root/.ssh/authorized_keys
    networks: 
      - ansible-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web_localhost.rule=Host(`web.localhost`,`chess.localhost`)"
      - "traefik.docker.network=ansible-net"
      - "traefik.http.services.web_localhost.loadbalancer.server.port=80"      

networks:
  ansible-net:
    name: ansible-net
    driver: bridge
    external: true