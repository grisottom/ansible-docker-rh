---
- hosts: master, slaves

  vars_files:
    - vars/main.yml

  vars: 
    OS_user_name_JBOSS: jboss  #Operating System username 

  tasks:

    # - name: Register loop output as a variable
    #   when: inventory_hostname in groups["master"]
    #   ansible.builtin.shell: "echo {{ item }}"
    #   loop: 
    #     - "one"
    #     - "two"
    #   register: echo
    #   no_log: true

    # - name: Register loop output as a variable
    #   when: inventory_hostname in groups["master"]
    #   ansible.builtin.script: 
    #   args:
    #     #chdir: /home/jboss/scripts/
    #     cmd: ./scripts/echo.sh {{ item }}
    #     executable: /usr/bin/sh
    #   loop: 
    #     - "one"
    #     - "two"
    #   register: echo
    #   #no_log: true


    # - name: Show result with line breaks 
    #   when: inventory_hostname in groups["master"]    
    #   ansible.builtin.debug:
    #     msg: "-----------> {{ item.stdout_lines }}"
    #     #var: "{{ item }}"
    #   loop: "{{ echo.results }}"
      #no_log: true

#-----------------------------------------

    - block: 
      # #---------------------------------------------
      - name: Copy/Transfer CONFIG and START scripts to 'master' and 'slaves'
        ansible.builtin.copy: 
          src: ./scripts/       
          dest: /home/jboss/scripts/
          mode: 0775


      - name: Register loop output as a variable 2
        when: inventory_hostname in groups["master"]
        ansible.builtin.shell:
        args:
          chdir: /home/jboss/scripts/
          cmd: ./echo.sh {{ item }}
        loop: "{{ groups['slaves'] }}"
        register: echo2


      - name: Show result with line breaks 2
        when: 
          - inventory_hostname in groups["master"] 
          - item.rc != 0
        ansible.builtin.fail:
          msg: "-----------> {{ item.cmd }}"
          #var: "{{ item }}"
        loop: "{{ echo2 }}"

# - name: Fail if return code is not 0
#   ansible.builtin.fail:
#     msg: "The command ({{ item.cmd }}) did not have a 0 return code"
#   when: item.rc != 0
#   loop: "{{ echo.results }}"

#       rescue:  #config & start
#           - name: RESCUE - Show result with line breaks
#             ansible.builtin.debug:
#               var: echo2.stdout_lines      


# #-----------------------------------------

#     - name: Register loop output as a variable 2
#       when: inventory_hostname in groups["master"]
#       ansible.builtin.shell: echo {{ item }}"
#       loop: "{{ groups['slaves'] }}"
#       register: echo
#       no_log: true

#     - name: Show result with line breaks 2
#       when: inventory_hostname in groups["master"]    
#       ansible.builtin.debug:
#         msg: "-----------> {{ item.stdout_lines }}"
#         #var: "{{ item }}"
#       loop: "{{ echo.results }}"

#-----------------------------------------

    # - block:  #pre-config


    #   #---------------------------------------------
    #   - name: items
    #     ansible.builtin.debug:
    #       msg: "{{ item }}"
    #     when: inventory_hostname in groups["master"]
    #     with_inventory_hostnames: "{{ groups['slaves'] }}"
    #     # with_inventory_hostnames: 
    #     #   - slaves       


    #   #---------------------------------------------
    #   - name: execute CLI CONFIG script on 'master'
    #     ansible.builtin.debug:
    #       msg: "{{ item }}"
    #     when: inventory_hostname in groups["master"]
    #     with_items:
    #       - um
    #       - dois

    #   # #---------------------------------------------
    #   - name: Copy/Transfer CONFIG and START scripts to 'master' and 'slaves'
    #     ansible.builtin.copy: 
    #       src: ./scripts/       
    #       dest: /home/jboss/scripts/
    #       mode: 0775

    #   #---------------------------------------------

    # - block:  #config & start jboss

    #   #---------------------------------------------
    #   - name: execute CLI CONFIG script on 'master'
    #     ansible.builtin.shell:
    #     when: inventory_hostname in groups["master"]
    #     args:
    #       chdir: /home/jboss/scripts/
    #       # cmd: ./jboss-cli-config.sh 'teste'
    #       #chdir: ./scripts/
    #       cmd: ./echo.sh "{{ item }}"
    #       #--slave " item "
    #       #executable: /usr/bin/sh

    #     register: results
    #     with_items:
    #       - um
    #       - dois
    #     #with_inventory_hostnames: "{{ groups['slaves'] }}"

    #     #'um' 'dois' '"{{ item }}"'
    #     #ignore_errors: true  # in order to continue processing
    #     #no_log: true         # log in next tasks
    #     # with_inventory_hostnames:
    #     #   - slaves

    #   - name: Show result with line breaks
    #     when: inventory_hostname in groups["master"]    
    #     ansible.builtin.debug:
    #       var: results.stdout_lines

    #   # # end of block: config & start, same user for all tasks
    #   # environment:
    #   #   - SLAVES_HOSTNAMES: "{{ groups['slaves'] }}"
    #   # become: true
    #   # become_user: "{{ OS_user_name_JBOSS }}"

    #   # rescue:  #config & start
    #   # - name: RESCUE - Show result with line breaks
    #   #   ansible.builtin.debug:
    #   #     var: results.stdout_lines