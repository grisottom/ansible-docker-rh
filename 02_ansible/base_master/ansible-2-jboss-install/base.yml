---
- hosts: jboss_host

  vars_files:
    - vars/main.yml

  environment: "{{ proxy_env }}"  #proxy for download openjdk    

  vars: 
    #ansible_remote_tmp: /tmp

    user_name_JBOSS: jboss  #System username to be created

    user_home_dir_jboss: "/home/{{ user_name_JBOSS }}"
    force_install: false #override

    app_dir_JBOSS: "{{ user_home_dir_jboss }}/jboss_eap"
    extract_dir_JBOSS: "{{ user_home_dir_jboss }}/tmp/extract_dir_jboss"
    app_archive_JBOSS: "http://serve.jboss.localhost:8000/jboss-eap-7.4.tar.gz"

    app_dir_MODULES: "{{ user_home_dir_jboss }}/jboss_eap/modules"
    extract_dir_MODULES: "{{ user_home_dir_jboss }}/tmp/extract_dir_modules"
    app_archive_MODULES: "http://serve.pg-driver.localhost:8000/modules.tar.gz"

    is_remote_archive: true
    add_rsync_opts: 
      - "--update"
      - "--delay-updates"
      
  tasks:
    # list of users in ./vars/main.yml
    - name: Create user "{{ user_name_JBOSS }}"
      import_role:
        name: create-users
      become: true

    # rsync will be used to copy files, role install-app-extracted
    # dependency for next step
    - name: install the latest version of rsync
      yum:
        name: rsync
        state: latest
      become: true    

    # check if installation {{app_dir}} already exists
    # https://phoenixnap.com/kb/ansible-check-if-file-exists#ftoc-heading-2
    - name: check if 'app_dir_JBOSS':'{{app_dir_JBOSS}}' already exists
      stat: 
        path={{ app_dir_JBOSS }}
      become: true
      become_user: "{{ user_name_JBOSS }}"
      register: jboss_target_dir
         
    # run as user (sudo -u user command)
    # only when jboss_target_dir DOS NOT EXISTS
    - name: install Jboss
      import_role:
        name: install-app-extracted
      vars:
        app_dir: "{{ app_dir_JBOSS }}"
        extract_dir: "{{ extract_dir_JBOSS }}"
        app_archive: "{{ app_archive_JBOSS }}"
      become_user: "{{ user_name_JBOSS }}"
      when: not jboss_target_dir.stat.exists or force_install|bool

    # install jboss modules
    - name: install modules, from 'app_dir_MODULES':'{{ app_dir_MODULES }}'
      import_role:
        name: install-app-extracted
      vars:
        app_dir: "{{ app_dir_MODULES }}"
        extract_dir: "{{ extract_dir_MODULES }}"
        app_archive: "{{ app_archive_MODULES }}"
      #become: true
      become_user: "{{ user_name_JBOSS }}"

    # openjdk, needed to run jboss and scripts
    - name: install openjdk
      include_role:
        name: alvistack.openjdk
        apply:
          become: true

    # add 'app_dir/bin' PATH to scripts dir
    - name: Add { app_dir }}/bin system-wide $PATH.
      copy:
        dest: /etc/profile.d/jboss-bin-path.sh
        content: 'PATH=$PATH:{{ app_dir_JBOSS }}/bin'
      become: true

    - name: put shell var into ansible var
      set_fact:
        env_path: "{{ lookup('env','PATH') }}"
      become_user: "{{ user_name_JBOSS }}"

    # print environment PATH
    - name: print $PATH
      debug: 
        msg: PATH={{ env_path }}
      become_user: "{{ user_name_JBOSS }}"