---
- hosts: master, slaves

  vars_files:
    - vars/main.yml

  environment: "{{ proxy_env }}"  #proxy for openjdk download

  vars: 
    #root_mount: "/u01"
    app_dir: "/u01/app"  #/home/{{ jboss_os_user }}"
    force_install: false #override as needed

    jdk_version: "jdk11.0.2"
    dest_dir_JDK: "{{ app_dir }}/jdk/{{ jdk_version}}"
    tmp_extract_dir_JDK: "{{ app_dir }}/tmp/extract_dir_jdk"
    app_archive_JDK: "http://serve.local:8000/downloads/java/open{{ jdk_version}}.tgz"

    jboss_version: "jboss-eap-7.4"
    dest_dir_JBOSS: "{{ app_dir }}/jboss/{{ jboss_version }}"
    tmp_extract_dir_JBOSS: "{{ app_dir }}/tmp/extract_dir_jboss"
    app_archive_JBOSS: "http://serve.local:8000/downloads/jboss/{{ jboss_version }}.tar.gz"

    dest_dir_MODULES: "{{ app_dir }}/jboss/{{ jboss_version }}/modules"
    tmp_extract_dir_MODULES: "{{ app_dir }}/tmp/extract_dir_modules"
    app_archive_MODULES: "http://serve.local:8000/jboss/module-pg/modules.tar.gz"

    is_remote_archive: true

    # Option to avoid overwriting
    # add_rsync_opts: 
    #   - "--update"
    #   - "--delay-updates"
      
  # roles:
  #   - role: geerlingguy.java
  #     when: "ansible_os_family == 'RedHat'"
  #     java_packages:
  #       - java-11-openjdk

  tasks:
    - block:  
      # list of 'os_users' in ./vars/main.yml
      - name: Create user "{{ jboss_os_user }}"
        import_role:
          name: create-users
        become: true
        no_log: true  #in order to hide sensitive vars, ex password

      # rsync will be used to copy files, role install-app-extracted  # dependency for next step
      - name: install the latest version of rsync
        yum:
          name: rsync
          state: latest
        become: true    

      # ------ JDK
      # check if installation {{dest_dir}} already exists # https://phoenixnap.com/kb/ansible-check-if-file-exists#ftoc-heading-2
      - name: :'{{ dest_dir_JDK }}' already exists ?
        stat: 
          path={{ dest_dir_JDK }}
        become: true
        become_user: "{{ jboss_os_user }}"
        register: jdk_target_dir
        no_log: true
          
      # only when jdk_target_dir DOS NOT EXISTS or force_install
      - name: install JDK
        import_role:
          name: install-app-extracted
        vars:
          dest_dir: "{{ dest_dir_JDK }}"
          extract_dir: "{{ tmp_extract_dir_JDK }}"
          app_archive: "{{ app_archive_JDK }}"
          dest_dir_owner: "{{ jboss_os_user }}"
          dest_dir_group: "{{ jboss_os_user }}"
        become: true  
        become_user: "{{ jboss_os_user }}"
        when: not jdk_target_dir.stat.exists or force_install|bool
        no_log: true

      # add 'dest_dir/bin' to PATH
      - name: Add {{ dest_dir_JDK }}/bin to system-wide $PATH.
        copy:
          dest: /etc/profile.d/jdk-bin-path.sh
          content: 'export PATH=$PATH:{{ dest_dir_JDK }}/bin'
        become: true

      - name: Add {{ dest_dir_JDK }} as JBOSS_HOME environment variable
        copy:
          dest: /etc/profile.d/jdk-home.sh
          content: 'export JAVA_HOME={{ dest_dir_JDK }}'
        become: true

      # ------ JBOSS
      # check if installation {{dest_dir}} already exists
      # https://phoenixnap.com/kb/ansible-check-if-file-exists#ftoc-heading-2
      - name: :'{{ dest_dir_JBOSS }}' already exists ?
        stat: 
          path={{ dest_dir_JBOSS }}
        become: true
        become_user: "{{ jboss_os_user }}"
        register: jboss_target_dir
        no_log: true
          
      # only when jboss_target_dir DOS NOT EXISTS or force_install
      - name: install Jboss
        import_role:
          name: install-app-extracted
        vars:
          dest_dir: "{{ dest_dir_JBOSS }}"
          extract_dir: "{{ tmp_extract_dir_JBOSS }}"
          app_archive: "{{ app_archive_JBOSS }}"
          dest_dir_owner: "{{ jboss_os_user }}"
          dest_dir_group: "{{ jboss_os_user }}"
        become: true  
        become_user: "{{ jboss_os_user }}"
        when: not jboss_target_dir.stat.exists or force_install|bool
        no_log: true

      # add 'dest_dir/bin' to PATH
      - name: Add {{ dest_dir_JBOSS }}/bin to system-wide $PATH.
        copy:
          dest: /etc/profile.d/jboss-bin-path.sh
          content: 'export PATH=$PATH:{{ dest_dir_JBOSS }}/bin'
        become: true

      - name: Add {{ dest_dir_JBOSS }} as JBOSS_HOME environment variable
        copy:
          dest: /etc/profile.d/jboss-home.sh
          content: 'export JBOSS_HOME={{ dest_dir_JBOSS }}'
        become: true

      # ------ JBOSS MODULE
      # install jboss modules
      # only when jboss_modules_target_dir DOS NOT EXISTS or force_install    
      - name: install modules, from 'dest_dir_MODULES':'{{ dest_dir_MODULES }}'
        import_role:
          name: install-app-extracted
        vars:
          dest_dir: "{{ dest_dir_MODULES }}"
          extract_dir: "{{ tmp_extract_dir_MODULES }}"
          app_archive: "{{ app_archive_MODULES }}"
        become: true
        become_user: "{{ jboss_os_user }}"
        no_log: true

      # -------------------------------------
      rescue:
      - name: Abort execution in case of failure
        when: { ansible_failed_result.failed }
        ansible.builtin.fail:
          msg: "{{ ansible_failed_result }}"