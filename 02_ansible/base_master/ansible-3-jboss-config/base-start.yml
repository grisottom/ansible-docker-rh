---
- hosts: master, slaves

  vars_files:
    - vars/main.yml

  vars: 
    OS_user_name_JBOSS: jboss  #System username 

    user_home_dir_jboss: "/home/{{ OS_user_name_JBOSS }}"

    app_dir_JBOSS: "{{ user_home_dir_jboss }}/jboss_eap"    

    # create a variable named "shell_env" that is a dictionary
    shell_env:
      PATH: "{{ lookup('ansible.builtin.env','PATH') }}:{{ app_dir_JBOSS }}/bin"
      JBOSS_HOME: "{{ app_dir_JBOSS }}"
      HOST_CONFIG: "{{ host_config }}"  #from group_vars
      JBOSS_OPTION: "{{ jboss_option }}"

  tasks:

    # - name: Copy/Transfer the scripts to hosts
    #   ansible.builtin.copy: 
    #     src: ./start/       
    #     dest: /home/jboss/start-jboss/
    #     mode: 0775
    #   become: true        
    #   become_user: "{{ OS_user_name_JBOSS }}"        

    - name: execute 'jboss-start.sh' script on hosts
      ansible.builtin.shell:
      args:
        chdir: /home/jboss/scripts/start/
        cmd: nohup ./jboss-start.sh 
        #nohup - 'no hung up', Keep shell running after end of task
      become: true
      become_user: "{{ OS_user_name_JBOSS }}"
      environment: "{{ shell_env }}"  #variables PATH & JBOSS_HOME     
      register: results
      ignore_errors: true  
      no_log: true

    - name: Show result with line breaks
      ansible.builtin.debug:
        var: results.stdout_lines

    - name: Fail in case of error
      ansible.builtin.fail:
        msg: 'Script failure'
      when: results is failed            